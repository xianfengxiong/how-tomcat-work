#
# Makefile for mod_jk2 (uses the build system of Apache2 - gnu make)
# created by Guenter Knauf <eflash@gmx.net>
#

#
# Declare the sub-directories to be built here
#

SUBDIRS = \
	$(EOLIST)

#
# Get the 'head' of the build environment.  This includes default targets and
# paths to tools
#

include $(AP_WORK)\build\NWGNUhead.inc

#
# build this level's files

#
# Make sure all needed macro's are defined
#

JKCOMMON = ../../common
JKINCLUDE = ../../include

#
# These directories will be at the beginning of the include list, followed by
# INCDIRS
#
XINCDIRS	+= \
			$(JKCOMMON) \
			$(JKINCLUDE) \
			$(AP_WORK)/include \
			$(NWOS) \
			$(AP_WORK)/modules/arch/netware \
			$(AP_WORK)/srclib/apr/include \
			$(AP_WORK)/srclib/apr-util/include \
			$(AP_WORK)/srclib/apr \
			$(AP_WORK)/srclib/pcre \
			$(JAVA_HOME)/include \
			$(JAVA_HOME)/include/netware \
			$(EOLIST)

#
# These flags will come after CFLAGS
#
XCFLAGS		+= \
			-relax_pointers \
			$(EOLIST)

#
# These defines will come after DEFINES
#
XDEFINES	+= \
			-D__NOVELL_LIBC__ \
			-D_POSIX_SOURCE \
			-DHAS_APR \
			$(EOLIST)

#			-DHAS_PCRE

#
# These flags will be added to the link.opt file
#
XLFLAGS		+= \
			$(EOLIST)

#
# These values will be appended to the correct variables based on the value of
# RELEASE
#
ifeq "$(RELEASE)" "debug"
XINCDIRS	+= \
			$(EOLIST)

XCFLAGS		+= \
			$(EOLIST)

XDEFINES	+= \
			$(EOLIST)

XLFLAGS		+= \
		   	$(EOLIST)
endif

ifeq "$(RELEASE)" "noopt"
XINCDIRS	+= \
			$(EOLIST)

XCFLAGS		+= \
			$(EOLIST)

XDEFINES	+= \
			$(EOLIST)

XLFLAGS		+= \
		   	$(EOLIST)
endif

ifeq "$(RELEASE)" "release"
XINCDIRS	+= \
			$(EOLIST)

XCFLAGS		+= \
			$(EOLIST)

XDEFINES	+= \
			$(EOLIST)

XLFLAGS		+= \
			$(EOLIST)
endif

#
# These are used by the link target if an NLM is being generated
# This is used by the link 'name' directive to name the nlm.  If left blank
# TARGET_nlm (see below) will be used.
#
NLM_NAME		= mod_jk2

#
# This is used by the link '-desc ' directive.
# If left blank, NLM_NAME will be used.
#
NLM_DESCRIPTION	= Apache $(VERSION_STR) plugin for Jakarta/Tomcat $(JK_VERSION_STR)

#
# This is used by the link '-copy ' directive.
# If left blank, the ASF copyright defined in NWGNUtail.inc will be used.
#
NLM_COPYRIGHT	=

#
# This is used by the '-threadname' directive.  If left blank,
# NLM_NAME Thread will be used.
#
NLM_THREAD_NAME	= JK2 Module

#
# If this is specified, it will override VERSION value in
# $(AP_WORK)\build\NWGNUenvironment.inc
#
NLM_VERSION	= $(JK_VERSION)

#
# If this is specified, it will override the default of 64K
#
#NLM_STACK_SIZE	= 32768
NLM_STACK_SIZE	= 49152


#
# If this is specified it will be used by the link '-entry' directive
#
NLM_ENTRY_SYM	= _LibCPrelude

#
# If this is specified it will be used by the link '-exit' directive
#
NLM_EXIT_SYM	= _LibCPostlude

#
# If this is specified it will be used by the link '-check' directive
#
NLM_CHECK_SYM	=

#
# If these are specified it will be used by the link '-flags' directive
#
NLM_FLAGS	=  AUTOUNLOAD, PSEUDOPREEMPTION

#
# If this is specified it will be linked in with the XDCData option in the def
# file instead of the default of $(NWOS)/apache.xdc.  XDCData can be disabled
# by setting APACHE_UNIPROC in the environment
#
XDCDATA		=

#
# If there is an NLM target, put it here
#
TARGET_nlm = \
	$(OBJDIR)/mod_jk2.nlm \
	$(EOLIST)

#
# If there is an LIB target, put it here
#
TARGET_lib = \
	$(EOLIST)

#
# These are the OBJ files needed to create the NLM target above.
# Paths must all use the '/' character
#
FILES_nlm_objs = \
	$(OBJDIR)/jk_nwmain.o \
	$(OBJDIR)/jk_channel.o \
	$(OBJDIR)/jk_channel_apr_socket.o \
	$(OBJDIR)/jk_channel_jni.o \
	$(OBJDIR)/jk_channel_un.o \
	$(OBJDIR)/jk_config.o \
	$(OBJDIR)/jk_config_file.o \
	$(OBJDIR)/jk_endpoint.o \
	$(OBJDIR)/jk_env.o \
	$(OBJDIR)/jk_handler_logon.o \
	$(OBJDIR)/jk_handler_response.o \
	$(OBJDIR)/jk_logger_file.o \
	$(OBJDIR)/jk_logger_win32.o \
	$(OBJDIR)/jk_map.o \
	$(OBJDIR)/jk_md5.o \
	$(OBJDIR)/jk_msg_ajp.o \
	$(OBJDIR)/jk_mutex.o \
	$(OBJDIR)/jk_mutex_proc.o \
	$(OBJDIR)/jk_mutex_thread.o \
	$(OBJDIR)/jk_objCache.o \
	$(OBJDIR)/jk_pool_apr.o \
	$(OBJDIR)/jk_registry.o \
	$(OBJDIR)/jk_requtil.o \
	$(OBJDIR)/jk_shm.o \
	$(OBJDIR)/jk_signal.o \
	$(OBJDIR)/jk_uriEnv.o \
	$(OBJDIR)/jk_uriMap.o \
	$(OBJDIR)/jk_user.o \
	$(OBJDIR)/jk_vm_default.o \
	$(OBJDIR)/jk_worker_ajp13.o \
	$(OBJDIR)/jk_worker_jni.o \
	$(OBJDIR)/jk_worker_lb.o \
	$(OBJDIR)/jk_worker_run.o \
	$(OBJDIR)/jk_worker_status.o \
	$(OBJDIR)/jk_workerEnv.o \
	$(OBJDIR)/jk_logger_apache2.o \
	$(OBJDIR)/jk_map_aprtable.o \
	$(OBJDIR)/jk_service_apache2.o \
	$(OBJDIR)/mod_jk2.o \
	$(EOLIST)

#
# These are the LIB files needed to create the NLM target above.
# These will be added as a library command in the link.opt file.
#
FILES_nlm_libs = \
	libcpre.o \
	$(EOLIST)

#
# These are the modules that the above NLM target depends on to load.
# These will be added as a module command in the link.opt file.
#
FILES_nlm_modules = \
	aprlib \
	libc \
	$(EOLIST)

#
# If the nlm has a msg file, put it's path here
#
FILE_nlm_msg =

#
# If the nlm has a hlp file put it's path here
#
FILE_nlm_hlp =

#
# If this is specified, it will override $(NWOS)\copyright.txt.
#
FILE_nlm_copyright = 

#
# Any additional imports go here
#
FILES_nlm_Ximports = \
	@$(APR)/aprlib.imp \
	@$(NWOS)/httpd.imp \
	@libc.imp \
	@ws2nlm.imp \
	$(EOLIST)

#
# Any symbols exported to here
#
FILES_nlm_exports = \
	jk2_module \
	$(EOLIST)

#
# These are the OBJ files needed to create the LIB target above.
# Paths must all use the '/' character
#
FILES_lib_objs = \
		$(EOLIST)

#
# implement targets and dependancies (leave this section alone)
#

libs :: $(OBJDIR) $(TARGET_lib)

nlms :: libs $(TARGET_nlm)

#
# Updated this target to create necessary directories and copy files to the
# correct place.  (See $(AP_WORK)\build\NWGNUhead.inc for examples)
#
install :: nlms FORCE
	copy $(OBJDIR)\*.nlm $(INSTALL)\Apache2\modules\*.*

#
# Any specialized rules here
#

$(OBJDIR)/%.o: $(JKCOMMON)/%.c $(OBJDIR)\cc.opt
	@echo Compiling $<
	$(CC) $(JKCOMMON)/$(<F) -o=$(OBJDIR)\$(@F) @$(OBJDIR)\cc.opt

$(OBJDIR)/version.inc: $(JKINCLUDE)/jk_global.h $(OBJDIR)
	@echo Creating $@
	@awk -f ../../../../common/build/get_ver.awk $< > $@

#
# Include the version info retrieved from jk_global.h
#

-include $(OBJDIR)/version.inc

#
# Include the 'tail' makefile that has targets that depend on variables defined
# in this makefile
#

include $(AP_WORK)\build\NWGNUtail.inc



